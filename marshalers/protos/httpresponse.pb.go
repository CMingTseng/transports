// Code generated by protoc-gen-go.
// source: httpresponse.proto
// DO NOT EDIT!

package transportsProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type HttpResponse struct {
	Status           *string `protobuf:"bytes,1,req,name=status" json:"status,omitempty"`
	Statuscode       *int32  `protobuf:"varint,2,req,name=statuscode" json:"statuscode,omitempty"`
	Proto            *string `protobuf:"bytes,3,req,name=proto" json:"proto,omitempty"`
	Body             *string `protobuf:"bytes,4,req,name=body" json:"body,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *HttpResponse) Reset()                    { *m = HttpResponse{} }
func (m *HttpResponse) String() string            { return proto.CompactTextString(m) }
func (*HttpResponse) ProtoMessage()               {}
func (*HttpResponse) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *HttpResponse) GetStatus() string {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return ""
}

func (m *HttpResponse) GetStatuscode() int32 {
	if m != nil && m.Statuscode != nil {
		return *m.Statuscode
	}
	return 0
}

func (m *HttpResponse) GetProto() string {
	if m != nil && m.Proto != nil {
		return *m.Proto
	}
	return ""
}

func (m *HttpResponse) GetBody() string {
	if m != nil && m.Body != nil {
		return *m.Body
	}
	return ""
}

func init() {
	proto.RegisterType((*HttpResponse)(nil), "transports.HttpResponse")
}

var fileDescriptor1 = []byte{
	// 116 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0x12, 0xca, 0x28, 0x29, 0x29,
	0x28, 0x4a, 0x2d, 0x2e, 0xc8, 0xcf, 0x2b, 0x4e, 0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2,
	0x2a, 0x29, 0x4a, 0xcc, 0x03, 0x8a, 0x14, 0x95, 0x14, 0x2b, 0xf9, 0x73, 0xf1, 0x78, 0x00, 0x55,
	0x04, 0x41, 0x55, 0x08, 0xf1, 0x71, 0xb1, 0x15, 0x97, 0x24, 0x96, 0x94, 0x16, 0x4b, 0x30, 0x2a,
	0x30, 0x69, 0x70, 0x0a, 0x09, 0x71, 0x71, 0x41, 0xf8, 0xc9, 0xf9, 0x29, 0xa9, 0x12, 0x4c, 0x40,
	0x31, 0x56, 0x21, 0x5e, 0x2e, 0x56, 0xb0, 0x41, 0x12, 0xcc, 0x60, 0x25, 0x3c, 0x5c, 0x2c, 0x49,
	0xf9, 0x29, 0x95, 0x12, 0x2c, 0x20, 0x1e, 0x20, 0x00, 0x00, 0xff, 0xff, 0x2c, 0x85, 0x49, 0xac,
	0x71, 0x00, 0x00, 0x00,
}
